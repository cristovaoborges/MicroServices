// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stone.Estabelecimentos.INFRA.Repository.Context;

namespace Stone.Estabelecimentos.INFRA.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    partial class SqlServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Stone.Estabelecimentos.DOMINIO.Entities.Estabelecimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Classificacao")
                        .HasColumnType("int")
                        .HasColumnName("classificacao");

                    b.Property<string>("NomeEstabelecimento")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("nome_estabelecimento");

                    b.HasKey("Id");

                    b.ToTable("TB_ESTABELECIMENTO");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Classificacao = 1,
                            NomeEstabelecimento = "Padaria Stn"
                        },
                        new
                        {
                            Id = 2L,
                            Classificacao = 4,
                            NomeEstabelecimento = "T-Shirt Stn"
                        },
                        new
                        {
                            Id = 3L,
                            Classificacao = 2,
                            NomeEstabelecimento = "CineStn"
                        },
                        new
                        {
                            Id = 4L,
                            Classificacao = 3,
                            NomeEstabelecimento = "EletroStn"
                        },
                        new
                        {
                            Id = 5L,
                            Classificacao = 1,
                            NomeEstabelecimento = "Rosquinha Stn"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
